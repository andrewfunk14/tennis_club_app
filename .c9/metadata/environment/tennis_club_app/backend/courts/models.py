{"filter":false,"title":"models.py","tooltip":"/tennis_club_app/backend/courts/models.py","undoManager":{"mark":19,"position":19,"stack":[[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["from django.db import models","","# Create your models here.",""],"id":14},{"start":{"row":0,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["from django.db import models","","class Court(models.Model):","    name = models.CharField(max_length=100)","    description = models.TextField(blank=True)","","    def __str__(self):","        return self.name",""]}],[{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":15}],[{"start":{"row":9,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["from django.db import models","","class Court(models.Model):","    name = models.CharField(max_length=50)","","    def __str__(self):","        return self.name","","class CourtBooking(models.Model):","    court = models.ForeignKey(Court, on_delete=models.CASCADE)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return f'{self.court.name} from {self.start_time} to {self.end_time}'",""],"id":16}],[{"start":{"row":0,"column":0},"end":{"row":7,"column":24},"action":"remove","lines":["from django.db import models","","class Court(models.Model):","    name = models.CharField(max_length=100)","    description = models.TextField(blank=True)","","    def __str__(self):","        return self.name"],"id":17}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"remove","lines":["",""],"id":18},{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":4,"column":0},"end":{"row":6,"column":24},"action":"remove","lines":["","    def __str__(self):","        return self.name"],"id":19},{"start":{"row":3,"column":42},"end":{"row":4,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":12,"column":0},"action":"remove","lines":["from django.db import models","","class Court(models.Model):","    name = models.CharField(max_length=50)","","class CourtBooking(models.Model):","    court = models.ForeignKey(Court, on_delete=models.CASCADE)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return f'{self.court.name} from {self.start_time} to {self.end_time}'",""],"id":20},{"start":{"row":0,"column":0},"end":{"row":33,"column":0},"action":"insert","lines":["from django.db import models","from django.core.exceptions import ValidationError","from django.utils import timezone","","class Court(models.Model):","    name = models.CharField(max_length=50)","","    def __str__(self):","        return self.name","","","class CourtBooking(models.Model):","    court = models.ForeignKey(Court, on_delete=models.CASCADE)","    title = models.CharField(max_length=100)  # Added title for better event naming","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return f'{self.title} on {self.court.name} from {self.start_time} to {self.end_time}'","","    def clean(self):","        # Ensure that the start time is before the end time","        if self.start_time >= self.end_time:","            raise ValidationError('End time must be after start time.')","","        # Optionally, ensure bookings are not in the past","        if self.start_time < timezone.now():","            raise ValidationError('Booking cannot start in the past.')","","    def save(self, *args, **kwargs):","        # Call the full clean method to run validations","        self.clean()","        super().save(*args, **kwargs)",""]}],[{"start":{"row":0,"column":0},"end":{"row":33,"column":0},"action":"remove","lines":["from django.db import models","from django.core.exceptions import ValidationError","from django.utils import timezone","","class Court(models.Model):","    name = models.CharField(max_length=50)","","    def __str__(self):","        return self.name","","","class CourtBooking(models.Model):","    court = models.ForeignKey(Court, on_delete=models.CASCADE)","    title = models.CharField(max_length=100)  # Added title for better event naming","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return f'{self.title} on {self.court.name} from {self.start_time} to {self.end_time}'","","    def clean(self):","        # Ensure that the start time is before the end time","        if self.start_time >= self.end_time:","            raise ValidationError('End time must be after start time.')","","        # Optionally, ensure bookings are not in the past","        if self.start_time < timezone.now():","            raise ValidationError('Booking cannot start in the past.')","","    def save(self, *args, **kwargs):","        # Call the full clean method to run validations","        self.clean()","        super().save(*args, **kwargs)",""],"id":21},{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["from django.db import models","","class Event(models.Model):","    title = models.CharField(max_length=100)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return f'{self.title} from {self.start_time} to {self.end_time}'",""]}],[{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"remove","lines":["from django.db import models","","class Event(models.Model):","    title = models.CharField(max_length=100)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return f'{self.title} from {self.start_time} to {self.end_time}'",""],"id":22},{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["from django.db import models","","class Event(models.Model):","    title = models.CharField(max_length=100)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return self.title",""]}],[{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"remove","lines":["from django.db import models","","class Event(models.Model):","    title = models.CharField(max_length=100)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return self.title",""],"id":23},{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["from django.db import models","","class Event(models.Model):","    title = models.CharField(max_length=100)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return f'{self.title} from {self.start_time} to {self.end_time}'",""]}],[{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"remove","lines":["from django.db import models","","class Event(models.Model):","    title = models.CharField(max_length=100)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return f'{self.title} from {self.start_time} to {self.end_time}'",""],"id":24},{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["from django.db import models","","class Event(models.Model):","    title = models.CharField(max_length=200)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return f'{self.title}: {self.start_time} - {self.end_time}'",""]}],[{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"remove","lines":["from django.db import models","","class Event(models.Model):","    title = models.CharField(max_length=200)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return f'{self.title}: {self.start_time} - {self.end_time}'",""],"id":25},{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["from django.db import models","","class Event(models.Model):","    title = models.CharField(max_length=200)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return self.title",""]}],[{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["",""],"id":27}],[{"start":{"row":10,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["from django.db import models","","class CourtEvent(models.Model):","    title = models.CharField(max_length=200)","    start = models.DateTimeField()","    end = models.DateTimeField()","","    def __str__(self):","        return self.title",""],"id":28}],[{"start":{"row":0,"column":0},"end":{"row":8,"column":25},"action":"remove","lines":["from django.db import models","","class Event(models.Model):","    title = models.CharField(max_length=200)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return self.title"],"id":29}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"remove","lines":["",""],"id":30},{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"remove","lines":["from django.db import models","","class CourtEvent(models.Model):","    title = models.CharField(max_length=200)","    start = models.DateTimeField()","    end = models.DateTimeField()","","    def __str__(self):","        return self.title",""],"id":31},{"start":{"row":0,"column":0},"end":{"row":33,"column":0},"action":"insert","lines":["from django.db import models","from django.core.exceptions import ValidationError","from django.utils import timezone","","class Court(models.Model):","    name = models.CharField(max_length=50)","","    def __str__(self):","        return self.name","","","class CourtBooking(models.Model):","    court = models.ForeignKey(Court, on_delete=models.CASCADE)","    title = models.CharField(max_length=100)  # Added title for better event naming","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return f'{self.title} on {self.court.name} from {self.start_time} to {self.end_time}'","","    def clean(self):","        # Ensure that the start time is before the end time","        if self.start_time >= self.end_time:","            raise ValidationError('End time must be after start time.')","","        # Optionally, ensure bookings are not in the past","        if self.start_time < timezone.now():","            raise ValidationError('Booking cannot start in the past.')","","    def save(self, *args, **kwargs):","        # Call the full clean method to run validations","        self.clean()","        super().save(*args, **kwargs)",""]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":2},"action":"insert","lines":["# "],"id":35},{"start":{"row":1,"column":0},"end":{"row":1,"column":2},"action":"insert","lines":["# "]},{"start":{"row":2,"column":0},"end":{"row":2,"column":2},"action":"insert","lines":["# "]},{"start":{"row":4,"column":0},"end":{"row":4,"column":2},"action":"insert","lines":["# "]},{"start":{"row":5,"column":0},"end":{"row":5,"column":2},"action":"insert","lines":["# "]},{"start":{"row":7,"column":0},"end":{"row":7,"column":2},"action":"insert","lines":["# "]},{"start":{"row":8,"column":0},"end":{"row":8,"column":2},"action":"insert","lines":["# "]},{"start":{"row":11,"column":0},"end":{"row":11,"column":2},"action":"insert","lines":["# "]},{"start":{"row":12,"column":0},"end":{"row":12,"column":2},"action":"insert","lines":["# "]},{"start":{"row":13,"column":0},"end":{"row":13,"column":2},"action":"insert","lines":["# "]},{"start":{"row":14,"column":0},"end":{"row":14,"column":2},"action":"insert","lines":["# "]},{"start":{"row":15,"column":0},"end":{"row":15,"column":2},"action":"insert","lines":["# "]},{"start":{"row":17,"column":0},"end":{"row":17,"column":2},"action":"insert","lines":["# "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":2},"action":"insert","lines":["# "]},{"start":{"row":20,"column":0},"end":{"row":20,"column":2},"action":"insert","lines":["# "]},{"start":{"row":21,"column":0},"end":{"row":21,"column":2},"action":"insert","lines":["# "]},{"start":{"row":22,"column":0},"end":{"row":22,"column":2},"action":"insert","lines":["# "]},{"start":{"row":23,"column":0},"end":{"row":23,"column":2},"action":"insert","lines":["# "]},{"start":{"row":25,"column":0},"end":{"row":25,"column":2},"action":"insert","lines":["# "]},{"start":{"row":26,"column":0},"end":{"row":26,"column":2},"action":"insert","lines":["# "]},{"start":{"row":27,"column":0},"end":{"row":27,"column":2},"action":"insert","lines":["# "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":2},"action":"insert","lines":["# "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":2},"action":"insert","lines":["# "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":2},"action":"insert","lines":["# "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":2},"action":"insert","lines":["# "]}],[{"start":{"row":0,"column":0},"end":{"row":33,"column":0},"action":"remove","lines":["# from django.db import models","# from django.core.exceptions import ValidationError","# from django.utils import timezone","","# class Court(models.Model):","#     name = models.CharField(max_length=50)","","#     def __str__(self):","#         return self.name","","","# class CourtBooking(models.Model):","#     court = models.ForeignKey(Court, on_delete=models.CASCADE)","#     title = models.CharField(max_length=100)  # Added title for better event naming","#     start_time = models.DateTimeField()","#     end_time = models.DateTimeField()","","#     def __str__(self):","#         return f'{self.title} on {self.court.name} from {self.start_time} to {self.end_time}'","","#     def clean(self):","#         # Ensure that the start time is before the end time","#         if self.start_time >= self.end_time:","#             raise ValidationError('End time must be after start time.')","","#         # Optionally, ensure bookings are not in the past","#         if self.start_time < timezone.now():","#             raise ValidationError('Booking cannot start in the past.')","","#     def save(self, *args, **kwargs):","#         # Call the full clean method to run validations","#         self.clean()","#         super().save(*args, **kwargs)",""],"id":36},{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["from django.db import models","","class Event(models.Model):","    title = models.CharField(max_length=200)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return self.title",""]}],[{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"remove","lines":["from django.db import models","","class Event(models.Model):","    title = models.CharField(max_length=200)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return self.title",""],"id":37},{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["from django.db import models","","class Event(models.Model):","    title = models.CharField(max_length=200)","    start_time = models.DateTimeField()","    end_time = models.DateTimeField()","","    def __str__(self):","        return self.title",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":9,"column":0},"end":{"row":9,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1726121835950,"hash":"18de5da77c01732655c6f82ff12a0265472cab05"}